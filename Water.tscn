[gd_scene load_steps=7 format=2]

[ext_resource path="res://Water.gd" type="Script" id=1]
[ext_resource path="res://icon.png" type="Texture" id=2]

[sub_resource type="Shader" id=1]
code = "


shader_type canvas_item;

uniform vec2 scale;
uniform float y_zoom;
uniform sampler2D noise;
uniform vec2 distortion_scale;
uniform float intensity;
uniform float speed;

uniform float wave_amplitude;
uniform float wave_speed;
uniform float wave_period;

uniform vec4 water_color: hint_color;


void fragment(){
	
	
	float waves = UV.y * scale.y + sin(UV.x * scale.x / wave_period - TIME * wave_speed) * cos(0.2 * UV.x * scale.x / wave_period + TIME - wave_speed)
	 * wave_amplitude - wave_amplitude;
	
	float distortion = texture(noise, UV * scale * distortion_scale + TIME * speed).x * intensity;
	distortion -= 0.06;
	
	float uv_height = SCREEN_PIXEL_SIZE.y / TEXTURE_PIXEL_SIZE.y;
	vec2 reflected_screenuv = vec2(SCREEN_UV.x - distortion * intensity * y_zoom, SCREEN_UV.y + uv_height * UV.y * scale.y *  y_zoom * 2.0);
	
	vec4 reflection = texture(SCREEN_TEXTURE,reflected_screenuv);
	

	COLOR.rgb = mix(reflection.rgb , water_color.rgb, water_color.a);
	COLOR.a = (step(0.01,waves));

	
}"

[sub_resource type="OpenSimplexNoise" id=4]
period = 80.4
lacunarity = 1.0

[sub_resource type="NoiseTexture" id=3]
seamless = true
noise = SubResource( 4 )

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/scale = Vector2( 20.599, 2.123 )
shader_param/y_zoom = 2.11893
shader_param/distortion_scale = Vector2( 10, 10 )
shader_param/intensity = 0.07
shader_param/speed = 0.085
shader_param/wave_amplitude = 0.03
shader_param/wave_speed = 4.0
shader_param/wave_period = 0.3
shader_param/water_color = Color( 0.0745098, 0.254902, 0.486275, 0.996078 )
shader_param/noise = SubResource( 3 )

[node name="Water" type="Sprite"]
modulate = Color( 1, 1, 1, 0.960784 )
material = SubResource( 2 )
position = Vector2( 164.5, 79 )
scale = Vector2( 20.4844, 2.1228 )
z_index = 10
texture = ExtResource( 2 )
script = ExtResource( 1 )

[connection signal="item_rect_changed" from="." to="." method="_on_Water_item_rect_changed"]
